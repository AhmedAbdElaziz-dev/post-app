{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/pages/home/home.component.ts","webpack:///src/app/pages/home/home.component.html","webpack:///src/app/services/post.service.ts","webpack:///src/app/shared/edit-post/edit-post.component.ts","webpack:///src/app/shared/edit-post/edit-post.component.html","webpack:///src/app/shared/post/post.component.ts","webpack:///src/app/shared/post/post.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","appRoutes","path","component","AppModule","forRoot","declarations","imports","providers","bootstrap","HomeComponent","postService","posts","getAllPosts","subscribe","response","error","console","log","http","get","getPostById","headers","editPost","post","patch","deletePost","EditPostComponent","router","route","parseInt","snapshot","params","form","value","body","userId","navigate","onSubmit","PostComponent","alert","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'posts-app';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { EditPostComponent } from './shared/edit-post/edit-post.component';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PostComponent } from './shared/post/post.component';\nimport { HomeComponent } from './pages/home/home.component';\nimport { postService } from './services/post.service';\nimport { HttpClientModule }    from '@angular/common/http';\nimport {FormsModule} from '@angular/forms'\nconst appRoutes: Routes = [\n  { path: 'edit/:id', component: EditPostComponent },\n  { path: 'home', component: HomeComponent },\n  { path: '', component: HomeComponent },\n];\n\n@NgModule({\n  declarations: [AppComponent, EditPostComponent, PostComponent, HomeComponent],\n  imports: [BrowserModule, RouterModule.forRoot(appRoutes),HttpClientModule,FormsModule],\n  providers: [postService],\n  bootstrap: [AppComponent],\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { postService } from 'src/app/services/post.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss'],\n})\nexport class HomeComponent implements OnInit {\n  posts: any = [];\n  constructor(private postService: postService) {}\n\n  ngOnInit(): void {\n    this.postService.getAllPosts().subscribe(\n      (response) => {\n        this.posts = response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n}\n","<app-post *ngFor=\"let post of posts\" [post]=\"post\"></app-post>>\n","import axios from 'axios';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Post } from '../models/post.model';\r\n\r\n@Injectable()\r\nexport class postService {\r\n  constructor(private http: HttpClient) {}\r\n  \r\n  getAllPosts = () => {\r\n    return this.http.get('https://jsonplaceholder.typicode.com/posts');\r\n  };\r\n    getPostById =  (id: number) => {\r\n        return this.http.get(`http://jsonplaceholder.typicode.com/posts/${id}`,{\r\n            headers:{'Access-Control-Allow-Origin': '*'}\r\n        } );\r\n\r\n    };\r\n    editPost =  (id: number, post:Post ) => {\r\n      return this.http.patch(`http://jsonplaceholder.typicode.com/posts/${id}`, post);\r\n    };\r\n    deletePost = (id:number)=>{\r\n        return this.http.delete(`http://jsonplaceholder.typicode.com/posts/${id}`)\r\n    }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute,  Router } from '@angular/router';\nimport { postService } from 'src/app/services/post.service';\nimport { NgForm } from '@angular/forms';\nimport { Post } from 'src/app/models/post.model';\n\n@Component({\n  selector: 'app-edit-post',\n  templateUrl: './edit-post.component.html',\n  styleUrls: ['./edit-post.component.scss'],\n})\nexport class EditPostComponent implements OnInit {\n  post: any = '';\n  id: number;\n  constructor(\n    private router:Router,\n    private route: ActivatedRoute,\n    private postService: postService,\n  ) {}\n\n  ngOnInit() {\n    let id = parseInt(this.route.snapshot.params['id']);\n    this.id = id;\n    this.postService.getPostById(id).subscribe(\n      (response) => {\n        console.log(response);\n        this.post = response;\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n  onSubmit(form: NgForm) {\n    const title:string = form.value.title\n    const body:string = form.value.body\n    const id = this.id\n    const userId = this.post.userId\n    const post:Post ={title,body,userId,id}\n    console.log(post);\n    this.postService.editPost(this.id,post).subscribe((response)=>{\n      if(response){\n        this.router.navigate(['/'])\n      }\n    })\n    console.log(form);\n  }\n}\n","<div class=\"editContainer\">\n\n<form (ngSubmit)=\"onSubmit(f)\" #f=ngForm>\n    <div class=\"form-group\">\n      <label for=\"exampleInputEmail1\">title</label>\n      <input type=\"text\" class=\"form-control\" id=\"exampleInputEmail1\" name=\"title\" aria-describedby=\"emailHelp\" [(ngModel)]=\"post.title\" >\n    </div>\n    <div class=\"form-group\">\n      <label for=\"exampleInputPassword1\">body</label>\n      <input type=\"text\" class=\"form-control\" id=\"exampleInputPassword1\"name=\"body\" [(ngModel)]=\"post.body\">\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">edit</button>\n    <button routerLink=\"/\" class=\"btn btn-primary\" style=\"margin: 1rem;\">close</button>\n    </form>\n</div>\n ","import { Component, OnInit, Output, Input } from '@angular/core';\nimport { Post } from 'src/app/models/post.model';\nimport { postService } from 'src/app/services/post.service';\n\n@Component({\n  selector: 'app-post',\n  templateUrl: './post.component.html',\n  styleUrls: ['./post.component.scss'],\n})\nexport class PostComponent implements OnInit {\n  @Input() post: Post;\n  constructor(private postService: postService) {}\n\n  ngOnInit(): void {}\n  deletePost() {\n    this.postService.deletePost(this.post.id).subscribe(\n      (response) => {\n        if(response)\n        alert('post deleted successfuly !!');\n      },\n      (error) => {\n        console.log(error);\n      }\n    );\n  }\n}\n","<div class=\"postContianer\">\n    <div class=\"postContianer__title\"><h1>{{post.title}}</h1></div>\n    <div class=\"postContianer__body\">{{post.body}}</div>\n\n    <a [routerLink] = \"['/edit',post.id]\"> <i class=\"fas fa-edit \" ></i></a>\n    <a (click)=\"deletePost()\"><i class=\"fas fa-trash-alt \"></i></a>\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}